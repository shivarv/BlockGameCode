({
	doInit : function(component, event, helper) {
        //initialise var details

	},
    
    //code to initiate the platform Events creation
    requestToConnect:  function(component, event, helper) {
        console.log("in request to connect function ");
        component.set("v.playerTypeAtt","Player 1");
        component.set("v.currentPlayerMode","Requested Mode");
        helper.setEventTimeHelper(component);
        helper.makeRequestToDualHelper(component);
	},
    
   
    
    playerConnectEventHandler : function(component, event, helper){
        console.log("playerConnectEventHandler function in GamePlayerRequest Cmp");
        var currentPlayerMode=component.get("v.currentPlayerMode");
        var playerTypeAtt=component.get("v.playerTypeAtt");
        var gameCreationTime=event.getParam("gameCreationTime");
        var playerId=component.get("v.playerId");
            
        var eventPlayerType= event.getParam("playerType");
        var eventplayer1Id =  event.getParam("player1Id");
        var eventplayer1Name =  event.getParam("player1Name");

        console.log("eventTimeToSubscribe "+ component.get("v.eventTimeToSubscribe"));
        console.log("gameCreationTime in event 2 "+ gameCreationTime);
		console.log("board game id "+event.getParam("playerGameBoardId"));
		console.log("is board game null "+ (!event.getParam("playerGameBoardId")) );
        console.log("eventPlayerType "+eventPlayerType+" playerTypeAtt  "+playerTypeAtt);
        console.log("requestedEventTime : "+component.get("v.requestedEventTime") +
                    "eventTimeToSubscribe : "+component.get("v.eventTimeToSubscribe")+
                    " gameCreationTime : "+gameCreationTime+
                    " playerGameBoardId : "+event.getParam("playerGameBoardId") +
                    " playerBoardId : "+(component.get("v.playerBoardId"))
                   );
        //   player1Id,player2Id,playerGameBoardId,playerType,gameCreationTime
     
        /* 
         * Must streamline this step 
         * 
        */ 
        if(eventPlayerType=="Player 1"){
           if(currentPlayerMode=="Receive Mode"){
            	$A.createComponent(
            		"c:AcceptToDualCom",
            		{
                		"title": "Accept the Game Dual",
                		"player1Id": eventplayer1Id,
                		"player1Name": eventplayer1Name,
                        "player1RequestTime": gameCreationTime //time must be same as player 1
            		},
            		function(msgBox){                
                		if (component.isValid()) {
                    		var targetCmp = component.find('ModalDialogPlaceholder');
                    		var body = targetCmp.get("v.body");
                    		body.push(msgBox);
                    		targetCmp.set("v.body", body); 
                		}
           			}
        		);
        	}
            /*The component is player 1 and is in request mode
             * 
            */ 
            
        }
        //This means this event is generated by player 2
    	else{
           if((eventPlayerType==playerTypeAtt) && 
              (component.get("v.requestedEventTime")==gameCreationTime) && 
              (event.getParam("playerGameBoardId")==(component.get("v.playerBoardId"))))
           {
           		helper.createChangeComponentEventHelper(component);

           }
            else if((!component.get("v.playerBoardId")) && (eventPlayerType!=playerTypeAtt) 
                   && (eventplayer1Id==playerId)
                   ){
                console.log(" it must be in Requested Mode : "+currentPlayerMode);
                console.log("in player 2 accepted event being received by player1 "+event.getParam("playerGameBoardId"));
                component.set("v.playerBoardId",event.getParam("playerGameBoardId"));
                component.set("v.player1Id",event.getParam("player1Id"));
                component.set("v.player2Id",event.getParam("player2Id"));
                helper.createChangeComponentEventHelper(component);
            }
            else
            {
                console.log("playerGameBoardId value is "+event.getParam("playerGameBoardId") 
                           +" is condition true "+(!event.getParam("playerGameBoardId")));
                console.log("eventPlayerType,playerTypeAtt value is "+eventPlayerType
                            +"  "+playerTypeAtt +" condition : "+ (eventPlayerType==playerTypeAtt));
                console.log("eventplayer1Id,playerId value is "+eventplayer1Id
                            +"  "+playerId +" condition : "+ (eventplayer1Id==playerId));
                
                console.log("this is the same platform event generated by this player ");
            }
    		//console.log("in player 2 type event is received "+(component.get("v.requestedEventTime")==gameCreationTime));
        	//helper.createChangeComponentEventHelper(component);

		}
           
        
      
    },
    
    /*
     * This method handles the accept event
     * This also Sets the current player to player 2
    */
    dualAcceptEventHandler : function(component,event,helper)
    {
        console.log("in dualAcceptEventHandler method ");
        component.set("v.playerTypeAtt","Player 2");
        component.set("v.player2Id",component.get("v.playerId"));
        component.set("v.player1Id",event.getParam("player1Id"));
        component.set("v.requestedEventTime",event.getParam("player1RequestTime"));
        helper.acceptDualHelper(component);
    },
    
})